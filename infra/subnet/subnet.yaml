AWSTemplateFormatVersion: '2010-09-09'
Description: Public Subnets and Route Table

Parameters:
  Environment:
    Type: String
    Default: test

Resources:
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Fn::ImportValue: !Sub "${Environment}-vpc-id"
      Tags:
        - Key: Name
          Value: !Sub "${Environment}-route-table"

  DefaultRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Fn::ImportValue: !Sub "${Environment}-igw-id"

  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Fn::ImportValue: !Sub "${Environment}-vpc-id"
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [ 0, !GetAZs "" ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${Environment}-public-subnet-1"

  Subnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Fn::ImportValue: !Sub "${Environment}-vpc-id"
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select [ 1, !GetAZs "" ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${Environment}-public-subnet-2"

  SubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet1
      RouteTableId: !Ref RouteTable

  SubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet2
      RouteTableId: !Ref RouteTable

Outputs:
  Subnet1Id:
    Value: !Ref Subnet1
    Export:
      Name: !Sub "${Environment}-subnet-1-id"
  Subnet2Id:
    Value: !Ref Subnet2
    Export:
      Name: !Sub "${Environment}-subnet-2-id"
  RouteTableId:
    Value: !Ref RouteTable
    Export:
      Name: !Sub "${Environment}-route-table-id"
